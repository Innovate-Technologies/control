.song-select .label {
    font-size: 55%;
}

.song-select p {
    margin: 0 0 0px;
}

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.song-select ul[dnd-list],
.song-select ul[dnd-list] > li {
	position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.song-select ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.song-select ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.song-select ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.song-select ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.song-select ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}
ul[dnd-list], ul[dnd-list] > li {
    position: relative;
}

.editable-wrap {
    display: inline !important;
}

.clear {
    clear: both;
}

.run-between .editable-controls {
    width: 16.66666667%;
    float: left;
    position: relative;
    min-height: 1px;
    padding-right: 5px;
    padding-left: 5px;
}

.run-between .text {
    width: 1px;
    float: left;
    position: relative;
    min-height: 1px;
    padding-left: 0px;
    padding-right: 0px;
    padding-top: 8px;
}

.run-between .text.until {
    width: 30px;
}